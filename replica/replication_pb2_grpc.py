# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from replica import replication_pb2 as replica_dot_replication__pb2


class ReplicaStub(object):
    """Servico disponibilizado por cada seguidor
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Put = channel.unary_unary(
                '/replication.Replica/Put',
                request_serializer=replica_dot_replication__pb2.KeyValue.SerializeToString,
                response_deserializer=replica_dot_replication__pb2.Empty.FromString,
                )
        self.Delete = channel.unary_unary(
                '/replication.Replica/Delete',
                request_serializer=replica_dot_replication__pb2.KeyRequest.SerializeToString,
                response_deserializer=replica_dot_replication__pb2.Empty.FromString,
                )
        self.Get = channel.unary_unary(
                '/replication.Replica/Get',
                request_serializer=replica_dot_replication__pb2.KeyRequest.SerializeToString,
                response_deserializer=replica_dot_replication__pb2.ValueResponse.FromString,
                )
        self.ScanRange = channel.unary_unary(
                '/replication.Replica/ScanRange',
                request_serializer=replica_dot_replication__pb2.RangeRequest.SerializeToString,
                response_deserializer=replica_dot_replication__pb2.RangeResponse.FromString,
                )
        self.FetchUpdates = channel.unary_unary(
                '/replication.Replica/FetchUpdates',
                request_serializer=replica_dot_replication__pb2.FetchRequest.SerializeToString,
                response_deserializer=replica_dot_replication__pb2.FetchResponse.FromString,
                )
        self.UpdatePartitionMap = channel.unary_unary(
                '/replication.Replica/UpdatePartitionMap',
                request_serializer=replica_dot_replication__pb2.PartitionMap.SerializeToString,
                response_deserializer=replica_dot_replication__pb2.Empty.FromString,
                )


class ReplicaServicer(object):
    """Servico disponibilizado por cada seguidor
    """

    def Put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePartitionMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReplicaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=replica_dot_replication__pb2.KeyValue.FromString,
                    response_serializer=replica_dot_replication__pb2.Empty.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=replica_dot_replication__pb2.KeyRequest.FromString,
                    response_serializer=replica_dot_replication__pb2.Empty.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=replica_dot_replication__pb2.KeyRequest.FromString,
                    response_serializer=replica_dot_replication__pb2.ValueResponse.SerializeToString,
            ),
            'ScanRange': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanRange,
                    request_deserializer=replica_dot_replication__pb2.RangeRequest.FromString,
                    response_serializer=replica_dot_replication__pb2.RangeResponse.SerializeToString,
            ),
            'FetchUpdates': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchUpdates,
                    request_deserializer=replica_dot_replication__pb2.FetchRequest.FromString,
                    response_serializer=replica_dot_replication__pb2.FetchResponse.SerializeToString,
            ),
            'UpdatePartitionMap': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePartitionMap,
                    request_deserializer=replica_dot_replication__pb2.PartitionMap.FromString,
                    response_serializer=replica_dot_replication__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'replication.Replica', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Replica(object):
    """Servico disponibilizado por cada seguidor
    """

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replication.Replica/Put',
            replica_dot_replication__pb2.KeyValue.SerializeToString,
            replica_dot_replication__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replication.Replica/Delete',
            replica_dot_replication__pb2.KeyRequest.SerializeToString,
            replica_dot_replication__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replication.Replica/Get',
            replica_dot_replication__pb2.KeyRequest.SerializeToString,
            replica_dot_replication__pb2.ValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replication.Replica/ScanRange',
            replica_dot_replication__pb2.RangeRequest.SerializeToString,
            replica_dot_replication__pb2.RangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replication.Replica/FetchUpdates',
            replica_dot_replication__pb2.FetchRequest.SerializeToString,
            replica_dot_replication__pb2.FetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePartitionMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replication.Replica/UpdatePartitionMap',
            replica_dot_replication__pb2.PartitionMap.SerializeToString,
            replica_dot_replication__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class HeartbeatServiceStub(object):
    """Servico dedicado para heartbeat
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/replication.HeartbeatService/Ping',
                request_serializer=replica_dot_replication__pb2.Heartbeat.SerializeToString,
                response_deserializer=replica_dot_replication__pb2.Empty.FromString,
                )


class HeartbeatServiceServicer(object):
    """Servico dedicado para heartbeat
    """

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HeartbeatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=replica_dot_replication__pb2.Heartbeat.FromString,
                    response_serializer=replica_dot_replication__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'replication.HeartbeatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HeartbeatService(object):
    """Servico dedicado para heartbeat
    """

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replication.HeartbeatService/Ping',
            replica_dot_replication__pb2.Heartbeat.SerializeToString,
            replica_dot_replication__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
