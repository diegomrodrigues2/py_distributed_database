// Definicoes de mensagens e servico para replicacao via gRPC
// As mensagens sao simples para facilitar o entendimento.

syntax = "proto3";
package replication;

// Requisicao contendo apenas a chave da operacao
message KeyRequest {
  string key = 1;
  int64 timestamp = 2;
  string node_id = 3;
  string op_id = 4;
}

// Estrutura para enviar chave e valor de uma escrita
message KeyValue {
  string key = 1;
  string value = 2;
  int64 timestamp = 3;
  string node_id = 4;
  string op_id = 5;
}

// Resposta que devolve um valor, vazio caso nao encontrado
message ValueResponse {
  string value = 1;
}

// Mensagem vazia usada em operacoes sem retorno
message Empty {}

// Mensagem simples para o mecanismo de heartbeat
message Heartbeat {
  string node_id = 1;
}

// Vetor de versões enviado ao requisitar atualizações
message VersionVector {
  map<string, int64> items = 1;
}

// Representa uma operação pendente de replicação
message Operation {
  string key = 1;
  string value = 2;
  int64 timestamp = 3;
  string node_id = 4;
  string op_id = 5;
  bool delete = 6;
}

// Requisição para anti-entropy permitindo enviar várias operações
message FetchRequest {
  VersionVector vector = 1;
  repeated Operation ops = 2;
  map<string, string> segment_hashes = 3;
}

// Lista de operações para sincronização
message FetchResponse {
  repeated Operation ops = 1;
  map<string, string> segment_hashes = 2;
}

// Servico disponibilizado por cada seguidor
service Replica {
  rpc Put(KeyValue) returns (Empty);
  rpc Delete(KeyRequest) returns (Empty);
  rpc Get(KeyRequest) returns (ValueResponse);
  rpc FetchUpdates(FetchRequest) returns (FetchResponse);
}

// Servico dedicado para heartbeat
service HeartbeatService {
  rpc Ping(Heartbeat) returns (Empty);
}
